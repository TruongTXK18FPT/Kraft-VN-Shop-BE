spring:
  application:
    name: Kraft

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/KraftDB}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:12345}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  # Email Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    default-encoding: UTF-8

  # Thymeleaf Configuration for Email Templates
  thymeleaf:
    encoding: UTF-8
    mode: HTML
    cache: false

  # Jackson Configuration for Vietnamese characters
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: Asia/Ho_Chi_Minh

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:7200000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

# PayOS Payment Configuration
payos:
  client-id: ${PAYOS_CLIENT_ID}
  api-key: ${PAYOS_API_KEY}
  checksum-key: ${PAYOS_CHECKSUM_KEY}
  return-url: ${PAYOS_RETURN_URL:http://localhost:8080/api/payment/success}
  cancel-url: ${PAYOS_CANCEL_URL:http://localhost:8080/api/payment/cancel}
  webhook-url: ${PAYOS_WEBHOOK_URL:http://localhost:8080/api/payment/webhook}

# Gemini API Configuration
gemini:
  api:
    key: ${GEMINI_API_KEY}
    base-url: ${GEMINI_BASE_URL:https://generativelanguage.googleapis.com/v1beta/models}
    model: ${GEMINI_MODEL:gemini-2.5-flash-preview-09-2025}
    fallback-model: ${GEMINI_FALLBACK_MODEL:gemini-flash-latest}
    temperature: ${GEMINI_TEMPERATURE:0.7}
    max-tokens: ${GEMINI_MAX_TOKENS:2048}

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.mss301.kraft: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  charset:
    console: UTF-8
    file: UTF-8

# App custom configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173,http://localhost:9002}
