spring:
  application:
    name: Kraft

  main:
    allow-bean-definition-overriding: true

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false

  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 20MB

  # Jackson Configuration for Vietnamese characters
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: Asia/Ho_Chi_Minh

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:7200000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

# Cloudinary Configuration
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}
  secure: ${CLOUDINARY_SECURE:true}
  folder:
    products: ${CLOUDINARY_FOLDER_PRODUCTS:kraft/products}
    avatars: ${CLOUDINARY_FOLDER_AVATARS:kraft/avatars}
    categories: ${CLOUDINARY_FOLDER_CATEGORIES:kraft/categories}
    banners: ${CLOUDINARY_FOLDER_BANNERS:kraft/banners}
    blogs: ${CLOUDINARY_FOLDER_BLOGS:kraft/blogs}
    brands: ${CLOUDINARY_FOLDER_BRANDS:kraft/brands}
    collections: ${CLOUDINARY_FOLDER_COLLECTIONS:kraft/collections}
    others: ${CLOUDINARY_FOLDER_OTHERS:kraft/others}

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.mss301.kraft: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  charset:
    console: UTF-8
    file: UTF-8

# App custom configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173,http://localhost:9002}
  file-storage:
    upload-dir: ${FILE_UPLOAD_DIR:uploads}
    base-url: ${FILE_BASE_URL:http://localhost:8080/api/files}

  # Production Storage Configuration
  storage:
    type: ${STORAGE_TYPE:local} # local, s3, gcs, azure
    upload-dir: ${FILE_UPLOAD_DIR:uploads}
    base-url: ${FILE_BASE_URL:http://localhost:8080/api/files}
    cdn-url: ${CDN_URL:} # Set this for production CDN
